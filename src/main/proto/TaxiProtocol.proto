syntax = "proto3";
import "Position.proto";
import "Ride.proto";
package grpc.protocols;

message HelloRequest {
  int32 taxiId = 1;
  string ipAddress = 2;
  int32 port = 3;
  Position position = 4;
  bool isMaster = 5;
}

message HelloResponse {
  int32 taxiId = 1;
  string message = 2;
  bool isMaster = 3;
}

message PingRequest{
  string message = 1;
}

message PingResponse{
  int32 id = 1;
  bool master = 2;
}

message NotifyFreeStation {
  string message = 1;
}

message NotifyCharging {
  int32 taxiId = 1;
  string ts = 2;
}

message SetMasterRequest {
  bool elected = 1;
}

message MasterResponse {
  string okMessage = 1;
}

message PropagateElectionRequest {
  Ride ride = 1;
  int32 currentCandidateId = 2;
  int32 currentCandidateBatteryLevel = 3;
  double distance = 4;
  string participants = 5;
}

message PropagateElectionResponse {
  string confirmMessage = 1;
}

message NotifyRideElection {
  Ride ride = 1;
}

message NotifyRideElectionResponse {
  string response = 1;
}

message ReleaseTaxiRequest {
  string releaseMessage = 1;
}

message ReleaseTaxiResponse {
  string response = 1;
}


service TaxiProtocol {
  rpc sayHello(HelloRequest) returns (HelloResponse);
  rpc ping(PingRequest) returns (PingResponse);
  rpc sendToCharge(NotifyFreeStation) returns (NotifyCharging);
  rpc setMaster(SetMasterRequest) returns (MasterResponse);
  rpc propagateElection(PropagateElectionRequest) returns (PropagateElectionResponse);
  rpc notifyNewRideToTaxi(NotifyRideElection) returns (NotifyRideElectionResponse);
  rpc releaseTaxi(ReleaseTaxiRequest) returns (ReleaseTaxiResponse);
}


